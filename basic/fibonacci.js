/**
 *  피보나치 수열을 푸는 방법은 여러가지가 있다.
 *  재귀, 메모이제이션, 루프 등
 *  성능, 속도를 고려한다면 재귀보다는 메모이제이션, 루프가 훨씬 낫다.
 * 
 *  재귀를 사용하는 것은 컴퓨터에게는 많은 부담을 주지만, 사람에게는 가독성을 높혀 줍니다. 
 *  성능을 중시한다면 재귀를 쓰지 않는 게 좋습니다
 *  
 *  $ 메모이제이션
 *  컴퓨터 프로그래밍 용어로, 동일한 계산을 반복해야 할 경우 한 번 계산한 결과를 메모리에 저장해 두었다가 꺼내 씀으로써 
 *  중복 계산을 방지할 수 있게 하는 기법이다. 동적 계획법의 핵심이 되는 기술로써 결국 메모리라는 공간 비용을 투입해 계산에 
 *  소요되는 시간 비용을 줄이는 방식이다.
 */

const memo = [0, 1];
function fibonacci(n) {
  for (let i = 2; i <= n; i++) {
    memo[i] = memo[i - 1] + memo[i - 2];
  }
  return memo[n]
}

console.log(fibonacci(10));
